# Style sheet for SDL-88
# Copyright (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
# Copyright (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
# $Id: sdl88.ssh,v 1.1.1.1.2.1 2007/12/29 01:58:33 mhatta Exp $
#

#
# This file is part of a2ps.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#

style SDL-88 is
written by "Jean-Philippe Cottin <cottin@inf.enst.fr>"
version is 1.0
documentation is
  "--strip-level=2 is very useful: it cancels the graphical information "
  "left by graphic editors.  Only the pure specification is then printed."
end documentation

first alphabet is
   "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_"
second alphabet is
   "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_"
keywords in Keyword_strong are
   active, adding, all, alternative, any, as, atleast, axioms, block,
   call, channel, "comment", connect, connection, constant, constants,
   create, dcl, decision, default, else, endalternative, endblock,
   endchannel, endconnection, enddecision, endgenerator, endnewtype,
   endoperator, endpackage, endprocedure, endprocess, endrefinement,
   endselect, endservice, endstate, endsubstructure, endsyntype,
   endsystem, enum, env, error, export, exported, external, fi,
   finalized, for, fpar, from, gate, generator, if, import, imported,
   "in", inherits, input, interface, join, literal, literals, map,
   nameclass, newtype, nextstate, nodelay, noequality, none, now,
   offspring, operator, "operators", ordering, out, output, package,
   parent, priority, procedure, process, provided, redefined,
   referenced, refinement, remote, reset, return, returns, revealed,
   reverse, save, select, self, sender, service, set, signal,
   signallist, signalroute, signalset, spelling, start, state, stop,
   struct, substructure, synonym, syntype, system, task, then, this,
   timer, to, type, use, variant, varstruct, via, view, viewed,
   virtual, with, or, xor, and, mod, rem, not, "end", macrodefinition,
   =>, "/=", >, >=, <, <=, "+", -, "//", ==>, ==, ->, :=, *, :, "/",
   =, !
end keywords
optional operators are
   -> \rightarrow,
   => \Rightarrow,
   "/=" \neq,
   == \equiv,
   <= \leq,
   >= \geq,
   ! \not
end operators
sequences are
    "/*" Comment Comment "*/" Comment,
    C-string,
    C-char,
    "(." Plain Plain ".)" Plain,
    << Plain Plain >> Plain
end sequences
end style
