# Style sheet for SpecC 1.0
# http://www.ics.uci.edu/~specc/reference/main.html
# $Id: specc.ssh,v 1.1.2.2 2007/12/29 01:58:33 mhatta Exp $
#
# Copyright (C) Hideaki Yokota, FUJI Research Institute Corp.
#
#
# This file is part of a2ps.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#

style SpecC is
written by "Hideaki Yokota <h.yokota@ieee.org>"
version is 0.1
requires a2ps version 4.13b

documentation is
   "Non-textual operators are not highlighted."
   "Some logical operators are printed as graphical symbols"
   "in the second level of pretty-printing."
end documentation

alphabets are
   "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_"

case sensitive

keywords in Keyword are
   double, enum, void, int, long, FILE, struct, char, signed, float,
   short, unsigned
end keywords

keywords in Keyword_strong are
   auto, "case", const, continue, do, inline, extern, for, register,
   return, switch, union, goto, typedef, sizeof, typeof, volatile, static,
   NULL, default, break, if, while, else,
   behavior, bit, bool, channel, delta, event, false, fsm, implements,
   import, "in", inout, interface, interrupt, note, notify, notifyone, out,
   par, pipe, piped, range, this, timing, trap, true, try, wait, waitfor
end keywords

optional operators are
  (/(case)([ 	]+)(.+)([ 	]*:)/
   \1 Keyword_strong, \2 Plain, \3 Label, \4 Plain)
end operators

optional operators are
   -> \rightarrow,
   && \wedge,
   || \vee,
   != \neq,
   == \equiv,
   # We need to protect these, so that <= is not replaced in <<=
   <<=,
   >>=,
   <= \leq,
   >= \geq,
   ! \not
end operators


sequences are
    "/*" Comment "*/",
    "//" Comment,
    C-string,
    # We do not want C-string in ASM to be declared as string,
    # since it polutes the layout.
    (/(asm)([[:blank:]]*\\([[:blank:]]*")/
	\1 Keyword_strong, \2 Plain)
        Plain
        "\"" Plain
	exceptions are
	  (/(\\\\.)/ \1)
	end exceptions,
    C-char
end sequences

end style
