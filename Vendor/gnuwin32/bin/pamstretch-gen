#!/bin/sh
#
# pamstretch-gen - a shell script which acts a little like a general
# form of pamstretch, by scaling up with pamstretch then scaling
# down with pamscale.
#
# it also copes with N<1, but then it just uses pamscale. :-)
#
# Formerly named 'pnminterp-gen' and 'pnmstretch-gen'.
#
# Copyright (C) 1998,2000 Russell Marks.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
# 


if [ "$1" = "" ]; then
  echo 'usage: pamstretch-gen N [pnmfile]'
  exit 1
fi

tempfile=$(mktemp pnmig.XXXXXXXXXX) || exit 1

trap 'rm -rf $tempdir' 0 1 3 15

if ! cat $2 >$tempfile 2>/dev/null; then
  echo 'pamstretch-gen: error reading file' 1>&2
  exit 1
fi

if ! pnmfile $tempfile 1>/dev/null 2>/dev/null; then
  echo 'Not valid pnm input'
  exit 1
fi

# we use the width as indication of how much to scale; width and
# height are being scaled equally, so this should be ok.
width=`pnmfile $tempfile 2>/dev/null|cut -d " " -f 3`

if [ "$width" = "" ]; then
  echo 'pamstretch-gen: not a PNM file' 1>&2
  exit 1
fi

# should really use dc for maths, but awk is less painful :-)
target_width=`awk 'BEGIN{printf("%d",'0.5+"$width"*"$1"')}'`

# work out how far we have to scale it up with pamstretch so that the
# new width is >= the target width.
int_scale=`awk '
BEGIN {
int_scale=1;int_width='"$width"'
while(int_width<'"$target_width"')
  {
  int_scale++
  int_width+='"$width"'
  }
print int_scale
}'`

if [ "$int_scale" -eq 1 ]; then
  pamscale "$1" $tempfile
else
  pamstretch "$int_scale" $tempfile | pnmscale -xsi "$target_width"
fi
