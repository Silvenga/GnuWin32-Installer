BSDCPIO(1)                BSD General Commands Manual               BSDCPIO(1)

NAME
     cpio - copy files to and from archives

SYNOPSIS
     cpio {-i} [options] [pattern ...] [< archive]
     cpio {-o} [options] < name-list [> archive]
     cpio {-p} [options] dest-dir < name-list

DESCRIPTION
     cpio copies files between archives and directories.  This
     implementation can extract from tar, pax, cpio, zip, jar,
     ar, and ISO 9660 cdrom images and can create tar, pax,
     cpio, ar, and shar archives.

     The first option to cpio is a mode indicator from the fol-
     lowing list:
     -i      Input.  Read an archive from standard input and
             extract the contents to disk or (if the -t option
             is specified) list the contents to standard out-
             put.  If one or more file patterns are specified,
             only files matching one of the patterns will be
             extracted.
     -o      Output.  Read a list of filenames from standard
             input and produce a new archive on standard output
             containing the specified items.
     -p      Pass-through.  Read a list of filenames from stan-
             dard input and copy the files to the specified
             directory.

OPTIONS
     Unless specifically stated otherwise, options are applica-
     ble in all operating modes.

     -a      (o and p modes) Reset access times on files after
             they are read.

     -B      (o mode only) Block output to records of 5120
             bytes.

     -c      (o mode only) Use the old POSIX portable character
             format.  Equivalent to --format odc.

     -d      (i and p modes) Create directories as necessary.

     -f pattern
             (i mode only) Ignore files that match pattern.

     --format format
             (o mode only) Produce the output archive in the
             specified format.  Supported formats include:

             cpio     Synonym for odc.
             newc     The SVR4 portable cpio format.
             odc      The old POSIX.1 portable octet-oriented
                      cpio format.
             pax      The POSIX.1 pax format, an extension of
                      the ustar format.
             ustar    The POSIX.1 tar format.

             The default format is odc.  See
             libarchive_formats(5) for more complete informa-
             tion about the formats currently supported by the
             underlying libarchive(3) library.

     -i      Input mode.  See above for description.

     -L      (o and p modes) All symbolic links will be fol-
             lowed.  Normally, symbolic links are archived and
             copied as symbolic links.  With this option, the
             target of the link will be archived or copied
             instead.

     -l      (p mode only) Create links from the target direc-
             tory to the original files, instead of copying.

     -m      (i and p modes) Set file modification time on cre-
             ated files to match those in the source.

     -o      Output mode.  See above for description.

     -p      Pass-through mode.  See above for description.

     --quiet
             Suppress unnecessary messages.

     -R [user][:][group]
             Set the owner and/or group on files in the output.
             If group is specified with no user (for example,
             -R :wheel) then the group will be set but not the
             user.  If the user is specified with a trailing
             colon and no group (for example, -R root:) then
             the group will be set to the user's default group.
             If the user is specified with no trailing colon,
             then the user will be set but not the group.  In
             -i and -p modes, this option can only be used by
             the super-user.  (For compatibility, a period can
             be used in place of the colon.)

     -r      (All modes.)  Rename files interactively.  For
             each file, a prompt is written to /dev/tty con-
             taining the name of the file and a line is read
             from /dev/tty.  If the line read is blank, the
             file is skipped.  If the line contains a single
             period, the file is processed normally.  Other-
             wise, the line is taken to be the new name of the
             file.

     -t      (i mode only) List the contents of the archive to
             stdout; do not restore the contents to disk.

     -u      (i and p modes) Unconditionally overwrite existing
             files.  Ordinarily, an older file will not over-
             write a newer file on disk.

     -v      Print the name of each file to stderr as it is
             processed.  With -t, provide a detailed listing of
             each file.

     --version
             Print the program version information and exit.

     -y      (o mode only) Compress the archive with bzip2-com-
             patible compression before writing to stdout.  In
             input mode, this option is ignored; bzip2 compres-
             sion is recognized automatically on input.

     -z      (o mode only) Compress the archive with gzip-com-
             patible compression before writing it to stdout.
             In input mode, this option is ignored; gzip com-
             pression is recognized automatically on input.

ENVIRONMENT
     The following environment variables affect the execution
     of cpio:

     LANG       The locale to use.  See environ(7) for more
                information.

     TZ         The timezone to use when displaying dates.  See
                environ(7) for more information.

EXIT STATUS
     The cpio utility exits 0 on success, and >0 if an error
     occurs.

EXAMPLES
     The cpio command is traditionally used to copy file
     heirarchies in conjunction with the find(1) command.  The
     first example here simply copies all files from src to
     dest:
           find src | cpio -pmud dest

     By carefully selecting options to the find(1) command and
     combining it with other standard utilities, it is possible
     to exercise very fine control over which files are copied.
     This next example copies files from src to dest that are
     more than 2 days old and whose names match a particular
     pattern:
           find src -mtime +2 | grep foo[bar] | cpio -pdmu dest

     This example copies files from src to dest that are more
     than 2 days old and which contain the word ``foobar'':
           find src -mtime +2 | xargs grep -l foobar | cpio
           -pdmu dest

COMPATIBILITY
     The mode options i, o, and p and the options a, B, c, d,
     f, l, m, r, t, u, and v comply with SUSv2.

     The old POSIX.1 standard specified that only -i, -o, and
     -p were interpreted as command-line options.  Each took a
     single argument of a list of modifier characters.  For
     example, the standard syntax allows -imu but does not sup-
     port -miu or -i -m -u, since m and u are only modifiers to
     -i, they are not command-line options in their own right.
     The syntax supported by this implementation is backwards-
     compatible with the standard.  For best compatibility,
     scripts should limit themselves to the standard syntax.

SEE ALSO
     bzip2(1), tar(1), gzip(1), mt(1), pax(1), libarchive(3),
     cpio(5), libarchive-formats(5), tar(5)

STANDARDS
     There is no current POSIX standard for the cpio command;
     it appeared in ISO/IEC 9945-1:1996 (``POSIX.1'') but was
     dropped from IEEE Std 1003.1-2001 (``POSIX.1'').

     The cpio, ustar, and pax interchange file formats are
     defined by IEEE Std 1003.1-2001 (``POSIX.1'') for the pax
     command.

HISTORY
     The original cpio and find utilities were written by Dick
     Haight while working in AT&T's Unix Support Group.  They
     first appeared in 1977 in PWB/UNIX 1.0, the ``Programmer's
     Work Bench'' system developed for use within AT&T.  They
     were first released outside of AT&T as part of System III
     Unix in 1981.  As a result, cpio actually predates tar,
     even though it was not well-known outside of AT&T until
     some time later.

     This is a complete re-implementation based on the
     libarchive(3) library.

BUGS
     The cpio archive format has several basic limitations: It
     does not store user and group names, only numbers.  As a
     result, it cannot be reliably used to transfer files
     between systems with dissimilar user and group numbering.
     Older cpio formats limit the user and group numbers to 16
     or 18 bits, which is insufficient for modern systems.  The
     cpio archive formats cannot support files over 4 giga-
     bytes, except for the ``odc'' variant, which can support
     files up to 8 gigabytes.

BSD                            December 21, 2007                           BSD
