.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "df" P 2003 POSIX
.\" df 
.SH NAME
df - report free disk space
.SH SYNOPSIS
.LP
\fBdf\fP \fB[\fP\fB-k\fP\fB][\fP\fB-P|-t\fP\fB][\fP\fIfile\fP\fB...\fP\fB]\fP\fB<img
src="../images/opt-end.gif" alt="[Option End]" border="0">\fP
.SH DESCRIPTION
.LP
The \fIdf\fP utility shall write the amount of available space  <img
src="../images/opt-start.gif" alt="[Option Start]" border="0"> \0and
file slots  for file systems on which the invoking user has appropriate
read access. File systems shall be specified
by the \fIfile\fP operands; when none are specified, information shall
be written for all file systems. The format of the default
output from \fIdf\fP is unspecified, but all space figures are reported
in 512-byte units, unless the \fB-k\fP option is
specified. This output shall contain at least the file system names,
amount of available space on each of these file systems,
\0and the number of free file slots, or \fIinodes\fP, available; when
\fB-t\fP is specified, the output shall contain the
total allocated space as well. 
.SH OPTIONS
.LP
The \fIdf\fP utility shall conform to the Base Definitions volume
of IEEE\0Std\01003.1-2001, Section 12.2, Utility Syntax Guidelines.
.LP
The following options shall be supported:
.TP
\fB-k\fP
Use 1024-byte units, instead of the default 512-byte units, when writing
space figures.
.TP
\fB-P\fP
Produce output in the format described in the STDOUT section.
.TP
\fB-t\fP
Include total allocated-space figures in the output. 
.sp
.SH OPERANDS
.LP
The following operand shall be supported:
.TP
\fIfile\fP
A pathname of a file within the hierarchy of the desired file system.
If a file other than a FIFO, a regular file, a directory,
\0or a special file representing the device containing the file system
(for example, \fB/dev/dsk/0s1\fP)  is specified, the results are unspecified.
Otherwise, \fIdf\fP shall write
the amount of free space in the file system containing the specified
\fIfile\fP operand.
.sp
.SH STDIN
.LP
Not used.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
The following environment variables shall affect the execution of
\fIdf\fP:
.TP
\fILANG\fP
Provide a default value for the internationalization variables that
are unset or null. (See the Base Definitions volume of
IEEE\0Std\01003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variables used to determine
the values of locale categories.)
.TP
\fILC_ALL\fP
If set to a non-empty string value, override the values of all the
other internationalization variables.
.TP
\fILC_CTYPE\fP
Determine the locale for the interpretation of sequences of bytes
of text data as characters (for example, single-byte as
opposed to multi-byte characters in arguments).
.TP
\fILC_MESSAGES\fP
Determine the locale that should be used to affect the format and
contents of diagnostic messages written to standard error and
informative messages written to standard output.
.TP
\fINLSPATH\fP
Determine the location of message catalogs for the processing of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
When both the \fB-k\fP and \fB-P\fP options are specified, the following
header line shall be written (in the POSIX
locale):
.sp
.RS
.nf

\fB"Filesystem 1024-blocks Used Available Capacity Mounted on\\n"
\fP
.fi
.RE
.LP
When the \fB-P\fP option is specified without the \fB-k\fP option,
the following header line shall be written (in the POSIX
locale):
.sp
.RS
.nf

\fB"Filesystem 512-blocks Used Available Capacity Mounted on\\n"
\fP
.fi
.RE
.LP
The implementation may adjust the spacing of the header line and the
individual data lines so that the information is presented
in orderly columns.
.LP
The remaining output with \fB-P\fP shall consist of one line of information
for each specified file system. These lines shall
be formatted as follows:
.sp
.RS
.nf

\fB"%s %d %d %d %d%% %s\\n", <\fP\fIfile system name\fP\fB>, <\fP\fItotal space\fP\fB>,
    <\fP\fIspace used\fP\fB>, <\fP\fIspace free\fP\fB>, <\fP\fIpercentage used\fP\fB>,
    <\fP\fIfile system root\fP\fB>
\fP
.fi
.RE
.LP
In the following list, all quantities expressed in 512-byte units
(1024-byte when \fB-k\fP is specified) shall be rounded up to
the next higher unit. The fields are:
.TP
<\fIfile\0system\0name\fP>
.sp
The name of the file system, in an implementation-defined format.
.TP
<\fItotal\0space\fP>
The total size of the file system in 512-byte units. The exact meaning
of this figure is implementation-defined, but should
include <\fIspace\0used\fP>, <\fIspace\0free\fP>, plus any space reserved
by the system not normally
available to a user.
.TP
<\fIspace\0used\fP>
The total amount of space allocated to existing files in the file
system, in 512-byte units.
.TP
<\fIspace\0free\fP>
The total amount of space available within the file system for the
creation of new files by unprivileged users, in 512-byte
units. When this figure is less than or equal to zero, it shall not
be possible to create any new files on the file system without
first deleting others, unless the process has appropriate privileges.
The figure written may be less than zero.
.TP
<\fIpercentage\0used\fP>
.sp
The percentage of the normally available space that is currently allocated
to all files on the file system. This shall be
calculated using the fraction: 
.sp
.RS
.nf

\fB<\fP\fIspace used\fP\fB>/( <\fP\fIspace used\fP\fB>+ <\fP\fIspace free\fP\fB>)
\fP
.fi
.RE
.LP
expressed as a percentage. This percentage may be greater than 100
if <\fIspace\0free\fP> is less than zero. The
percentage value shall be expressed as a positive integer, with any
fractional result causing it to be rounded to the next highest
integer.
.TP
<\fIfile\0system\0root\fP>
.sp
The directory below which the file system hierarchy appears.
.sp
.LP
The output format is unspecified when \fB-t\fP is used. 
.SH STDERR
.LP
The standard error shall be used only for diagnostic messages.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
The following exit values shall be returned:
.TP
\00
Successful completion.
.TP
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
Default.
.LP
\fIThe following sections are informative.\fP
.SH APPLICATION USAGE
.LP
On most systems, the "name of the file system, in an implementation-defined
format" is the special file on which the file
system is mounted.
.LP
On large file systems, the calculation specified for percentage used
can create huge rounding errors.
.SH EXAMPLES
.in +5
.LP
The following example writes portable information about the \fB/usr\fP
file system:
.sp
.RS
.nf

\fBdf -P /usr
\fP
.fi
.RE
.in -5
.in +5
.LP
Assuming that \fB/usr/src\fP is part of the \fB/usr\fP file system,
the following produces the same output as the previous
example:
.sp
.RS
.nf

\fBdf -P /usr/src
\fP
.fi
.RE
.in -5
.SH RATIONALE
.LP
The behavior of \fIdf\fP with the \fB-P\fP option is the default action
of the 4.2 BSD \fIdf\fP utility. The uppercase
\fB-P\fP was selected to avoid collision with a known industry extension
using \fB-p\fP.
.LP
Historical \fIdf\fP implementations vary considerably in their default
output. It was therefore necessary to describe the
default output in a loose manner to accommodate all known historical
implementations and to add a portable option ( \fB-P\fP) to
provide information in a portable format.
.LP
The use of 512-byte units is historical practice and maintains compatibility
with \fIls\fP
and other utilities in this volume of IEEE\0Std\01003.1-2001. This
does not mandate that the file system itself be based on
512-byte blocks. The \fB-k\fP option was added as a compromise measure.
It was agreed by the standard developers that 512 bytes
was the best default unit because of its complete historical consistency
on System V (\fIversus\fP the mixed 512/1024-byte usage
on BSD systems), and that a \fB-k\fP option to switch to 1024-byte
units was a good compromise. Users who prefer the more logical
1024-byte quantity can easily alias \fIdf\fP to \fIdf\fP \fB-k\fP
without breaking many historical scripts relying on the
512-byte units.
.LP
It was suggested that \fIdf\fP and the various related utilities be
modified to access a \fIBLOCKSIZE\fP environment variable
to achieve consistency and user acceptance. Since this is not historical
practice on any system, it is left as a possible area for
system extensions and will be re-evaluated in a future version if
it is widely implemented.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfind\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
