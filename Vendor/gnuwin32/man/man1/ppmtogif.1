." This man page was generated by the Netpbm tool 'makeman' from HTML source.
." Do not hand-hack it!  If you have bug fixes or improvements, please find
." the corresponding HTML page on the Netpbm website, generate a patch
." against that, and send it to the Netpbm maintainer.
.TH "Ppmtogif User Manual" 0 "15 September 2002" "netpbm documentation"
.UR ppmtogif.html#index
Table Of Contents
.UE
\&

.UN lbAB
.SH NAME

ppmtogif - convert a PPM image to a GIF image

.UN lbAC
.SH SYNOPSIS

\fBppmtogif\fP

[\fB-interlace\fP]

[\fB-sort\fP]

[\fB-mapfile\fP \fImapfile\fP]
[\fB-transparent=\fP[\fB=\fP]\fIcolor\fP]

[\fB-alpha=\fP\fIpgmfile\fP]

[\fB-comment=\fP\fItext\fP]

[\fB-nolzw\fP]
[\fIppmfile\fP]
.PP
All options can be abbreviated to their shortest unique prefix.  You
may use two hyphens instead of one to designate an option.  You may
use either white space or equals signs between an option name and its
value.

.UN lbAD
.SH DESCRIPTION
.PP
This program is part of
.BR Netpbm (1).
.PP
\fBppmtogif\fP reads a PPM iamge as input and produces a GIF file
as output.
.PP
This program creates only individual GIF images.  To combine
multiple GIF images into an animated GIF, use 
.UR http://www.lcdf.org/gifsicle/
\fBgifsicle\fP
.UE
\& (not part of
the Netpbm package).
.PP
\fBppmtogif\fP creates either an original GIF87 format GIF file or
the newer GIF89 format.  It creates GIF89 when you request features
that were new with GIF89, to wit the \fB-transparent\fP or
\fB-comment\fP options.  Otherwise, it creates GIF87.  Really old GIF
readers conceivably could not recognize GIF89.

.UN lbAE
.SH OPTIONS



.TP
\fB-interlace\fP
Produce an interlaced GIF file.

.TP
\fB-sort\fP
Produce a GIF file with a sorted color map.

.TP
\fB-mapfile=\fP\fImapfile\fP
.sp
Use the colors found in the file \fImapfile\fP to create the
colormap in the GIF file, instead of the colors from \fIppmfile\fP.
\fImapfile\fP can be any PPM file; all that matters is the colors in
it.  If the colors in \fIppmfile\fP do not match those in
\fImapfile\fP, \fBppmtogif\fP matches them to a 'best
match.' You can obtain a much better result by using \fBpnmremap\fP
to change the colors in the input to those in the map file.
.sp
The \fImapfile\fP file is not a palette file, just an image whose
colors you want to use.  The order of colors in the GIF palette have
nothing to do with where they appear in the \fImapfile\fP image, and
duplication of colors in the image is irrelevant.

.TP
\fB-transparent=\fP\fIcolor\fP
\fBppmtogif\fP marks the specified color as transparent in the GIF image.
.sp
If you don't specify \fB-transparent\fP, \fBppmtogif\fP does not
mark any color transparent (except as indicated by the \fB-alpha\fP
option).
.sp
Specify the color (\fIcolor\fP) as described for the 
.UR libppm.html#colorname
argument of the \fBppm_parsecolor()\fP library routine
.UE
\&.

If the color you specify is not present in the image, \fBppmtogif\fP
selects instead the color in the image that is closest to the one you
specify.  Closeness is measured as a cartesian distance between colors
in RGB space.  If multiple colors are equidistant, \fBppmtogif\fP
chooses one of them arbitrarily.
.sp
However, if you prefix your color specification with '=',
e.g.  \fB-transparent==red\fP, only the exact color you specify will
be transparent.  If that color does not appear in the image, there
will be no transparency.  \fBppmtogif\fP issues an information
message when this is the case.
.sp
You cannot specify both \fB-transparent\fP and \fB-alpha\fP.

.TP
\fB-alpha=\fP\fIpgmfile\fP
 This option names a PGM file that contains an alpha mask for the
image.  \fBppmtogif\fP creates fully transparent pixels wherever the
alpha mask indicates transparency greater than 50%.  The color of
those pixels is that specified by the \fB-alphacolor\fP
option, or black by default.
.sp
To do this, \fBppmtogif\fP creates an entry in the GIF colormap in
addition to the entries for colors that are actually in the image.  It
marks that colormap entry as transparent and uses that colormap index
in the output image to create a transparent pixel.
.sp
 The alpha image must be the same dimensions as the input
image, but may have any maxval.  White means opaque and black means
transparent.
.sp
 You cannot specify both \fB-transparent\fP and \fB-alpha\fP.  

.TP
\fB-alphacolor\fP
See \fB-alpha\fP.

.TP
\fB-comment=\fP\fItext\fP
Include a comment in the GIF output with comment text \fItext\fP.
.sp
Without this option, there are no comments in the output.
.sp
Note that in a command shell, you'll have to use quotation marks around
\fItext\fP if it contains characters (e.g. space) that would make the shell
think it is multiple arguments:
.nf
$ ppmtogif -comment "this is a comment" <xxx.ppm >xxx.gif
.fi

.TP
\fB-nolzw\fP
.sp
This option is mainly of historical interest -- it involves use of
a patent that is now expired.
.sp
This option causes the GIF output, and thus \fBppmtogif\fP, not to
use LZW (Lempel-Ziv) compression.  As a result, the image file is
larger and, before the patent expired, no royalties would be owed to
the holder of the patent on LZW.  See the section LICENSE below.
.sp
LZW is a method for combining the information from multiple pixels into a
single GIF code.  With the \fB-nolzw\fP option, \fBppmtogif\fP
creates one GIF code per pixel, so it is not doing any compression and not
using LZW.  However, any GIF decoder, whether it uses an LZW decompressor
or not, will correctly decode this uncompressed format.  An LZW decompressor
would see this as a particular case of LZW compression.
.sp
Note that if someone uses an LZW decompressor such as the one in
\fBgiftopnm\fP or pretty much any graphics display program to process
the output of \fBppmtogif -nolzw \fP, he is then using the LZW
patent.  But the patent holder expressed far less interest in
enforcing the patent on decoding than on encoding.



.UN lbAF
.SH SEE ALSO
.BR giftopnm (1),
.BR ppmquant (1),
.BR pngtopnm (1),

\fBgifsicle\fP 
.UR http://www.lcdf.org/gifsicle
http://www.lcdf.org/gifsicle
.UE
\&,
.BR ppm (1).

.UN lbAG
.SH AUTHOR
.PP
Based on GIFENCOD by David Rowley <\fImgardi@watdcsu.waterloo.edu\fP>.
Lempel-Ziv compression based on 'compress'.
.PP
The non-LZW format is generated by code based on \fBdjpeg\fP by
the Independent Jpeg Group.
.PP
Copyright (C) 1989 by Jef Poskanzer.

.UN lbAH
.SH LICENSE
.PP
If you use \fBppmtogif\fP without the \fB-nolzw\fP option, you
are using a patent on the LZW compression method which is owned by
Unisys.  The patent has expired (in 2003 in the US and in 2004
elsewhere), so it doesn't matter.  While the patent was in force, most
people who used \fBppmtogif\fP and similar programs did so without a
license from Unisys to do so.  Unisys typically asked $5000 for a
license for trivial use of the patent.  Unisys never enforced the
patent against trivial users.
.PP
Rumor has it that IBM also owns or owned a patent covering
\fBppmtogif\fP.
.PP
A replacement for the GIF format that never required any patents to
use is the PNG format.
