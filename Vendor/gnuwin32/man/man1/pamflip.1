." This man page was generated by the Netpbm tool 'makeman' from HTML source.
." Do not hand-hack it!  If you have bug fixes or improvements, please find
." the corresponding HTML page on the Netpbm website, generate a patch
." against that, and send it to the Netpbm maintainer.
.TH "Pamflip User Manual" 0 "18 February 2005" "netpbm documentation"
.UR pamflip.html#index
Table Of Contents
.UE
\&

.UN lbAB
.SH NAME

pamflip - flip or rotate a PAM or PNM image

.UN lbAC
.SH SYNOPSIS

\fBpamflip\fP
{
\fB-leftright\fP | \fB-lr\fP |
\fB-topbottom\fP | \fB-tb\fP |
\fB-transpose\fP | \fB-xy\fP |
\fB-rotate90\fP | \fB-r90\fP | \fB-cw\fP |
\fB-rotate270\fP | \fB-r270\fP | \fB-ccw\fP |
\fB-rotate180\fP | \fB-r180\fP
\fB-null\fP |
\fB-xform=\fP\fIxform1\fP\fB,\fP\fIxform2\fP...
}
[\fB-memsize=\fP\fImebibytes\fP]
[\fB-pagesize=\fP\fIbytes\fP]
[\fIpamfile\fP]
.PP
All options can be abbreviated to their shortest unique prefix.  You
may use two hyphens instead of one to designate an option.  You may
use either white space or an equals sign between an option name and
its value.

.UN lbAD
.SH DESCRIPTION
.PP
This program is part of
.BR Netpbm (1).
.PP
\fBpamflip\fP flips a PAM or PNM image top for bottom or left for right,
or transposes it horizontal for vertical, or rotates it 1, 2, or 3
quarter turns.
.PP
To rotate at other angles, use \fBpnmrotate\fP.  It is much slower,
though.
.PP
The input image is \fIpamfile\fP, or Standard Input if \fIpamfile\fP
is not specified.
.PP
To flip/rotate a JFIF (JPEG) image losslessly, use \fBjpegtran\fP.
\fBjpegtran\fP is part of the Independent Jpeg Group's compression
library package, not part of Netpbm.  The normal Netpbm way to flip a
JFIF file would be to convert it to PNM, use \fBpamflip\fP, and convert
back to JFIF.  But since JPEG compression is lossy, the resulting image
would have less quality than the original.  \fBjpegtran\fP, on the other
hand, can do this particular transformation directly on the compressed
data without loss.


.UN lbAE
.SH OPTIONS
.PP
You must supply exactly one of the following options:
.PP
\fBpamflip\fP's predecessor (before Netpbm 10.7 - August 2002)
\fBpnmflip\fP did not have the \fB-xform\fP option and instead
allowed you to specify any number of the other options, including
zero.  It applied all the indicated transformations, in the order
given, just like with \fBpamflip\fP's \fB-xform\fP option.  (Reason
for the change: this kind of interpretation of options is inconsistent
with the rest of Netpbm and most of the Unix world, and thus hard to
understand and to implement).


.TP
\fB-leftright\fP
.TP
\fB-lr\fP
Flip left for right.

.TP
\fB-topbottom\fP
.TP
\fB-tb\fP
Flip top for bottom.

.TP
\fB-transpose\fP
.TP
\fB-xy\fP
Transpose horizontal for vertical.  I.e. make the pixel at (x,y) be
at (y,x).

.TP
\fB-rotate90\fP
.TP
\fB-r90\fP
.TP
\fB-ccw\fP
Rotate counterclockwise 90 degrees.

.TP
\fB-rotate180\fP
.TP
\fB-r180\fP
Rotate 180 degrees.

.TP
\fB-rotate270\fP
.TP
\fB-r270\fP
.TP
\fB-cw\fP
Rotate counterclockwise 270 degrees (clockwise 90 degrees)

.TP
\fB-null\fP 
No change.  (The purpose of this option is the
convenience of programs that invoke \fBpamflip\fP after computing the
kind of transformation desired, including none at all).
.sp
This option was new in Netpbm 10.13 (December 2002).
     
.TP
\fB-xform=\fP\fIxform1\fP\fB,\fP\fIxform2\fP...
Apply all the transforms listed, in order.  The valid values for
the transforms are as follows and have the same meanings as the
identically named options above.

.IP \(bu
leftright
.IP \(bu
topbottom
.IP \(bu
transpose

.sp
This option was new in Netpbm 10.13 (December 2002).


.PP
The following options help \fBpamflip\fP use memory efficiently.
Some flipping operations on very large images can cause \fBpamflip\fP
to have a very large working set, which means if you don't have enough
real memory, the program can page thrash, which means it takes a
ridiculous amount time to run.  If your entire image fits in real
memory, you don't have a problem.  If you're just flipping top for
bottom or left for right, you don't have a problem.  Otherwise, pay
attention.  If you're interested in the details of the thrashing
problem and how \fBpamflip\fP approaches it, you're invited to read
a complete explanation in comments in the source code.


.TP
\fB-memsize=\fP\fImebibytes\fP
\fImebibytes\fP is the size in mebibytes (aka megabytes) of
\fIreal\fP memory (not virtual) available for \fBpamflip\fP.
\fBpamflip\fP does nothing special to allocate real memory or control
it's allocation -- it gets whatever it gets just by referencing
virtual memory normally.  This is the maximum amount that
\fBpamflip\fP can be expected to end up with by doing that.  This is
just about impossible for you to know, of course, but you can
estimate.  The total real memory in your system should be a major
factor in your estimate.
.sp
When you specify \fB-memsize\fP and are doing a row for column type
of transformation, \fBpamflip\fP does the transformation in multiple
passes, each one with a working set size less than the specified value.
.sp
If your estimate is even slightly too large, it's the same as
infinity.  If you estimate too small, \fBpamflip\fP will use more
passes than it needs to, and thus will slow down proportional to the
underestimate.
.sp
If you do not specify \fB-memsize\fP, \fBpamflip\fP assumes infinite
real memory and does the entire transformation in one pass.
.sp
This option did not exist before Netpbm 10.7 (August 2002).
     
.TP
\fB-pagesize=\fP\fIbytes\fP
\fIbytes\fP is the size in bytes of a paging unit -- the amount of
memory that gets paged in or out as an indivisible unit -- in your system.
The default is 4KiB.
.sp
This option did not exist before Netpbm 10.7 (August 2002).



Miscellaneous options:

.TP
\fB-verbose\fP
This option causes \fBpamflip\fP to issue messages to Standard Error
about its progress.



.UN lbAF
.SH SEE ALSO
.BR pnmrotate (1), 
.BR pnm (1),
\fBjpegtran\fP manual
.UN lbAG
.UN history
.SH HISTORY
.PP
\fBpamflip\fP replaced \fBpnmflip\fP in Netpbm 10.13 (December 2002).
\fBpamflip\fP is backward compatible, but also works on PAM images.


.SH AUTHOR

Copyright (C) 1989 by Jef Poskanzer.
