.\" Automatically generated by Pod::Man version 1.02
.\" Mon Apr  9 19:09:02 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` `
.    ds C' '
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
.    .
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "GIF2EPSN 1"
.TH GIF2EPSN 1 "" "2001-04-09" ""
.UC
.SH "NAME"
gif2epsn \- Program to dump images saved as \s-1GIF\s0 files on Epson type printers.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
gif2epsn [\-q] [\-d dither] [\-t bw] [\-m map] [\-i] [\-n] [\-p printer] [\-h] gif-file
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
A program to dump images saved as \s-1GIF\s0 files on Epson type printers.
.PP
If no gif-file is given, Gif2Epsn will try to read a \s-1GIF\s0 file from stdin.
.SH "OPTIONS"
.IX Header "OPTIONS"
.Ip "\fB\-q\fR" 4
.IX Item "-q"
Quiet mode.  Default off on \s-1MSDOS\s0, on under \s-1UNIX\s0. Controls printout of running
scan lines. Use \-q- to invert.
.Ip "\fB\-d dither\fR" 4
.IX Item "-d dither"
Sets size of dithering matrix, where DitherSize can be 2,3 or 4 only (for 2x2,
3x3 and 4x4 dithering matrices). Default is 2. Note image will be displayed in
this mode only if the mapping option (see \-m) selected this mode.
.Ip "\fB\-t bw\fR" 4
.IX Item "-t bw"
Sets threshold level for B&W mapping in percent.  This threshold level is used
in the different mappings as selected via \-m.  Default is 19%.
.Ip "\fB\-m map\fR" 4
.IX Item "-m map"
Select method to map colors to B&W.  Mapping can be:
.RS 4
.Ip "\fB0\fR" 4
.IX Item "0"
Every none background color is considered foreground (white color but is drawn
as black by printer, unless \-i is specified).
.Ip "\fB1\fR" 4
.IX Item "1"
If 0.3 * \s-1RED\s0 + 0.59 * \s-1GREEN\s0 + 0.11 * \s-1YELLOW\s0 > \s-1BW\s0 the pixel is considered white
color.
.Ip "\fB2\fR" 4
.IX Item "2"
Colors are mapped as in 1, and use dithering of size as defined using \-d
option.  BWthreshold is used here as scaler.
.RE
.RS 4
.Sp
The default is option 0.
.RE
.Ip "\fB\-i\fR" 4
.IX Item "-i"
Invert the image, i.e.  black \-> white, white \-> black.
.Ip "\fB\-n\fR" 4
.IX Item "-n"
Nicer image.  Uses double-density feature of Epson printer.  This takes more
time (and kills your ink cartridge faster...) but results are usually better.
.Ip "\fB\-p printer\fR" 4
.IX Item "-p printer"
Under Unix, output goes to stdout by default; under \s-1DOS\s0, the default is \s-1LPT1:\s0.
With this switch you can specify the output target.
.Ip "\fB\-h\fR" 4
.IX Item "-h"
print one line of command line help, similar to Usage above.
.SH "NOTES"
.IX Header "NOTES"
The output has an aspect ratio of 1, so a square image will be square in
hardcopy as well.
.PP
The widest image can be printed is 640 pixels, on 8 inch paper.  You
probably will need to flip wider images, if height is less than that:
   gifflip \-r x29.gif | gif2epsn
.PP
Wider images will be clipped.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIgif2bgi\fR\|(1), \fIgif2herc\fR\|(1), \fIgif2iris\fR\|(1), \fIgif2ps\fR\|(1), \fIgif2rgb\fR\|(1), \fIgif2rle\fR\|(1),
\&\fIgif2x11\fR\|(1), \fIgifasm\fR\|(1), \fIgifbg\fR\|(1), \fIgifburst\fR\|(1), \fIgifclip\fR\|(1), \fIgifclrmp\fR\|(1),
\&\fIgifcolor\fR\|(1), \fIgifcomb\fR\|(1), \fIgifcompose\fR\|(1), \fIgiffix\fR\|(1), \fIgiffiltr\fR\|(1), \fIgifflip\fR\|(1),
\&\fIgifhisto\fR\|(1), \fIgifinter\fR\|(1), \fIgifinto\fR\|(1), \fIgifovly\fR\|(1), \fIgifpos\fR\|(1), \fIgifrotat\fR\|(1),
\&\fIgifrsize\fR\|(1), \fIgifspnge\fR\|(1), \fIgiftext\fR\|(1), \fIgifwedge\fR\|(1), \fIicon2gif\fR\|(1), \fIraw2gif\fR\|(1),
\&\fIrgb2gif\fR\|(1), \fIrle2gif\fR\|(1), \fItext2gif\fR\|(1)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
The \s-1GIFLIB\s0 distribution is Copyright (c) 1997  Eric S. Raymond
.SH "AUTHORS"
.IX Header "AUTHORS"
Gershon Elber
.PP
Eric S. Raymond <esr@snark.thyrsus.com>
