.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GIF2PNG" 1 "" "" ""
.SH NAME
gif2png \- convert GIFs to PNGs
.SH "SYNOPSIS"

.nf
\fBgif2png\fR [-bdfghinprsvwO] [\fIfile.[gif]\fR...]
.fi

.SH "DESCRIPTION"

.PP
The \fBgif2png\fR program converts files in the obsolescent and patent-encumbered Graphic Interchange Format (GIF) to Portable Network Graphics (PNG) format, an open W3C standard.

.PP
Normally \fBgif2png\fR converts each file named on the command line, leaving the original in place. If a name does not have a .gif extension, the unmodified name will be tried first, followed by the name with .gif appended. For each file named `foo.gif', a foo.png will be created.

.PP
When a multi-image GIF file named foo.gif is converted, gif2png creates multiple PNG files, each containing one frame; their names will be foo.png, foo.p01, foo.p02 etc.

.PP
If no source files are specified and stdin is a terminal, \fBgif2png\fR lists a usage summary and version information, then exits.

.PP
If no source files are specified, and stdin is a device or pipe, stdin is converted to noname.png. (The program can't be a normal stdin-to-stdout filter because of the possibility that the input GIF might have multiple images).

.PP
However, if filter mode is forced (with -f) stdin will be converted to stdout, with \fBgif2png\fR returning an error code if the GIF is multi-image.

.PP
The program will preserve the information contained in a GIF file as closely as possible, including GIF comment and application-data extension blocks. All graphics data (pixels, RGB color tables) will be converted without loss of information. Transparency is also preserved. There is one exception; GIF plain-text extensions are skipped.

.PP
The program automatically converts interlaced GIFs to interlaced PNGs. It detects images in which all colors are gray (equal R, G, and B values) and converts such images to PNG grayscale. Other images are converted to use the PNG palette type. Duplicate color entries are silently preserved. Unused color-table entries cause an error message.

.PP
The action of the program can be modified with the following command-line switches:

.TP
\fB-b\fR {#}RRGGBB
Background. Replace transparent pixels with given RGB value, six hexadecimal digits interpreted as two hexits each of red, green, and blue value. The value may optionally be led with a #, HTML-style.

.TP
\fB-d \fR
Delete source GIF files after successful conversion.

.TP
\fB-f \fR
Filter mode. Convert GIF on stdin to PNG on stdout, return error if the GIF is multi-image.

.TP
\fB-g \fR
Write gamma=1/2.2 and sRGB chunks in the PNG.

.TP
\fB-h \fR
Generate PNG color-frequency histogram chunks into converted color files.

.TP
\fB-i \fR
Force conversion to interlaced PNG files.

.TP
\fB-n \fR
Force conversion to non-interlaced PNG files.

.TP
\fB-p \fR
Display progress of PNG writing.

.TP
\fB-r \fR
Try to recover data from corrupted GIF files.

.TP
\fB-s \fR
Do not translate the GIF Software chunk to a PNG annotation.

.TP
\fB-t \fR
Change behavior of web-probe (-w) mode to accept GIFs with transparency.

.TP
\fB-v \fR
Verbose mode; show summary line, -vv enables conversion-statistics and debugging messages.

.TP
\fB-w \fR
Web-probe switch; list GIFs that do not have multiple images or transparency to stdout. GIFs that fail this filter cause error messages to stderr.

.TP
\fB -O \fR
Optimize; remove unused color-table entries. Normally these trigger an error message and disable \fB-d\fR (but conversion is completed anyway). Also, use zlib compression level 9 (best compression) instead of the default level. The recovery algorithm enabled by \fB-r\fR is as follows: Unused color table entries will not trigger an error message as they normally do, but will still be preserved unless \fB-O\fR is also on, in which case they will be discarded. Missing color tables will be patched with a default that puts black at index 0, white at index 1, and supplies red, green, blue, yellow, purple and cyan as the remaining color values. Missing image pixels will be set to 0. Unrecognized or corrupted extensions will be discarded.

.SH "PROBLEMS"

.PP
Naively converting all your GIFs at one go with \fBgif2png\fR is not likely to give you the results you want. The problem is not with PNG itself or with gif2png, but with the poor-to-nonexistent support for PNG transparency and animation in most browsers.

.PP
The web-probe switch is intended to be used with scripts for converting web sites. All PNGs generated from the pathnames it returns will be properly rendered in Netscape Navigator 4.04+, Internet Explorer versions 4.0b1+, and all other current web browsers. Note: in future releases of gif2png, the meaning of this switch may change to reflect the capabilities of prevalent browsers.

.SH "PATENT ISSUES"

.PP
The GIF format is encumbered by a Unisys patent (see <: http://www.delphion.com/detailshttp://www.delphion.com/details?&pn10=US04464650>) for the Lempel-Ziv-Welch compression algorithm. Use of any GIF image generator not licensed by Unisys can make you liable to lawsuit. Unisys apparently refuses to issue licenses for use of LZW in open-source programs, and in 1999 stated that its policy is to require a $5000 fee from websites that carry GIF images made by unlicensed software -- even nonprofit websites created and displayed with free software. See <: http://corp2.unisys.com/LeadStory/lzw-license.htmlhttp://corp2.unisys.com/LeadStory/lzw-license.html> for details.

.PP
The patent probably does not cover LZW decompressors such as the one gif2png uses; legal opinions are divided on this, there has been no court test, and Unisys refuses to commit itself. It is possible that you may be liable if you distribute \fBgif2png\fR in a commercial program, or distribute \fBgif2png\fR on a for-profit basis.

.PP
For a history of the GIF patent controversy, see <: http://lpf.ai.mit.edu/Patents/Gif/Gif.htmlhttp://lpf.ai.mit.edu/Patents/Gif/Gif.html>. To avoid legal problems, it would be a good idea to convert all GIFs on your websites and elsewhere to PNGs without delay. See <: http://burnallgifs.org/http://burnallgifs.org/> for discussion.

.SH "STANDARDS AND SPECIFICATIONS"

.PP
Copies of the GIF89 specification are widely available on the Web; search for "GRAPHICS INTERCHANGE FORMAT". The Graphics Interchange Format(c) is the Copyright property of CompuServe Incorporated. GIF(sm) is a Service Mark property of CompuServe Incorporated.

.PP
The PNG home site at <: http://www.libpng.org/pub/png/http://www.libpng.org/pub/png/> has very complete information on the PNG standard, PNG libraries, and PNG tools.

.SH "SEE ALSO"

.PP
web2png(1)

.SH "AUTHORS"

.PP
Code by Alexander Lehmann <alex@hal.rhein-main.de>, 1995. Auto-interlace conversion and tRNS optimization by Greg Roelofs <newt@pobox.com>, 1999. Man page, -O, -w, and production packaging by Eric S. Raymond <esr@thyrsus.com>, 1999.

