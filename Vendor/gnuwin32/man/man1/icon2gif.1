.\" Automatically generated by Pod::Man version 1.02
.\" Mon Apr  9 19:09:11 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` `
.    ds C' '
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
.    .
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "ICON2GIF 1"
.TH ICON2GIF 1 "" "2001-04-09" ""
.UC
.SH "NAME"
icon2gif \- Create multi-image \s-1GIF\s0.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
icon2gif [\-q] [\-a] [\-d] [t TranslationTable] [\-h] gif-file...
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
A program to convert a series of editable text \s-1GIF\s0 icon specifications and
named \s-1GIF\s0 files into a multi-image \s-1GIF\s0, usable as a graphic resource file.
It can also dump existing GIFs in this format.
.PP
If no gif-file is given, icon2gif will try to read a text input from stdin.
.Sh "Specification Syntax"
.IX Subsection "Specification Syntax"
Here is a syntax summary in informal \s-1BNF\s0.  The token `\s-1NL\s0' represents a
required newline.
.PP
.Vb 1
\&    <gif-spec> ::= <header-block> <image-block>...
.Ve
.Vb 1
\&    <header-block> ::= <header-declaration>...
.Ve
.Vb 6
\&    <header-declaration ::=
\&            | screen width <digits> NL
\&            | screen height <digits> NL
\&            | screen colors <digits> NL
\&            | screen background <digits> NL
\&            | screen map <color-table> NL
.Ve
.Vb 1
\&    <color-table> ::= <color-declaration>... end NL
.Ve
.Vb 1
\&    <color-declaration> ::= rgb <digits> <digits> <digits> is <key> NL
.Ve
.Vb 5
\&    <image-block> ::= include <file-name> NL
\&            | image NL
\&                <image-declaration>...
\&                <raster-picture>
\&                [ <extension> ]
.Ve
.Vb 5
\&    <image-declarations> ::= image top <digits> NL
\&                | image left <digits> NL
\&                | image interlaced NL
\&                | image map <color-table> NL
\&                | image bits <digits> by <digits> NL <raster-block>
.Ve
.Vb 3
\&    <extension> := <comment> NL <extension-block> NL end NL
\&            | <plaintext> NL <extension-block> NL end NL
\&            | extension <hex-digits> NL <extension-block> NL end NL
.Ve
If the semantics of the `screen height', `screen width', `screen background',
`image top', `image left' declarations aren't obvious to you, what are you
doing with this software?
.PP
A color table declares color indices (in ascending order from 0) and
assiciates them with key characters.  These characters can later be used in
raster blocks.  As these must be printable and non-whitespace, you can only
specify 94 colors per icon.  Life is like that sometimes.
.PP
A raster block is just a block of key characters.  It should be sized correctly
for the `image bits' declaration that leads it.
.PP
The `comment' or `plaintext' keywords lead defined \s-1GIF89\s0 extension record data
(the other two \s-1GIF89\s0 types, graphics control and application block, are not
yet supported).  You can also say `extension' followed by a hexadecimal record
type.  All of these extension declarations must be followed by an extension
block, which is terminated by the keyword `end' on its own line.
.PP
An extension block is a series of text lines, each interpreted as a string of
bytes to fill an argument block (the terminating newline is stripped).  Text
may include standard C-style octal and hex escapes preceded by a backslash.
.PP
All <digits> tokens are interpreted as decimal numerals; <hex-digits>
tokens are interpreted as two hex digits (a byte). All coordinates are
zero-origin with the top left corner (0,0).  Range checking is weak and
signedness checking nonexistent; caveat hacker!
.PP
In general, the amount of whitespace and order of declarations within a header
or image block is not significant, except that a raster picture must
immediately follow its `image bits' bits declaration.
.PP
The `include' declaration includes a named \s-1GIF\s0 as the next image.  The global
color maps of included GIFs are merged with the base table defined by any
`screen color' declaration.  All images of an included multi-image \s-1GIF\s0 will
be included in order.
.PP
Comments may be preceded with `#' and will be ignored.
.SH "OPTIONS"
.IX Header "OPTIONS"
.Ip "\fB\-q\fR" 4
.IX Item "-q"
Quiet mode.  Defaults off on \s-1MSDOS\s0, on under \s-1UNIX\s0.  Controls printout of
running scan lines. Use \-q- to invert.
.Ip "\fB\-d\fR" 4
.IX Item "-d"
Dump the input \s-1GIF\s0 \fIfile\fR\|(s) into the text form described above.
.Ip "\fB\-t\fR" 4
.IX Item "-t"
Specify name characters to use when dumping raster blocks.  Only valid with \-d
option.
.Ip "\fB\-h\fR" 4
.IX Item "-h"
Print one line of command line help, similar to Usage above.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
A sample icon file called `sample.ico' is included in the pic directory.
.SH "BUGS"
.IX Header "BUGS"
Because there are only 94 characters unambiguously usable for raster blocks,
an attempt to dump a \s-1GIF\s0 with a larger color map will fail.
.PP
Error checking is rudimentary.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIgif2bgi\fR\|(1), \fIgif2epsn\fR\|(1), \fIgif2herc\fR\|(1), \fIgif2iris\fR\|(1), \fIgif2ps\fR\|(1), \fIgif2rgb\fR\|(1),
\&\fIgif2rle\fR\|(1), \fIgif2x11\fR\|(1), \fIgifasm\fR\|(1), \fIgifbg\fR\|(1), \fIgifburst\fR\|(1), \fIgifclip\fR\|(1),
\&\fIgifclrmp\fR\|(1), \fIgifcolor\fR\|(1), \fIgifcomb\fR\|(1), \fIgifcompose\fR\|(1), \fIgiffiltr\fR\|(1), \fIgiffix\fR\|(1),
\&\fIgifflip\fR\|(1), \fIgifhisto\fR\|(1), \fIgifinter\fR\|(1), \fIgifinto\fR\|(1), \fIgifovly\fR\|(1), \fIgifpos\fR\|(1),
\&\fIgifrotat\fR\|(1), \fIgifrsize\fR\|(1), \fIgifspnge\fR\|(1), \fIgiftext\fR\|(1), \fIgifwedge\fR\|(1), \fIraw2gif\fR\|(1),
\&\fIrgb2gif\fR\|(1), \fIrle2gif\fR\|(1), \fItext2gif\fR\|(1)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
The \s-1GIFLIB\s0 distribution is Copyright (c) 1997  Eric S. Raymond
.SH "AUTHOR"
.IX Header "AUTHOR"
Eric S. Raymond <esr@snark.thyrsus.com>
