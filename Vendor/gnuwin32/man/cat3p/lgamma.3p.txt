lgamma(P)                                             lgamma(P)





NAME
       lgamma, lgammaf, lgammal - log gamma function

SYNOPSIS
       #include <math.h>

       double lgamma(double x);
       float lgammaf(float x);
       long double lgammal(long double x);


       extern int signgam;



DESCRIPTION
       The  functionality  described  on this reference page is
       aligned with the ISO C standard.  Any  conflict  between
       the  requirements  described here and the ISO C standard
       is unintentional.  This volume  of  IEEE Std 1003.1-2001
       defers to the ISO C standard.

       These functions shall compute


       The  argument  x need not be a non-positive integer ( is
       defined over the reals, except  the  non-positive  inte-
       gers).

       The  sign  of   is  returned  in  the  external  integer
       signgam.

       These functions need not be reentrant. A  function  that
       is  not  required  to be reentrant is not required to be
       thread-safe.

       An application wishing to  check  for  error  situations
       should   set   errno   to   zero   and  call  feclearex-
       cept(FE_ALL_EXCEPT) before calling these functions.   On
       return,  if errno is non-zero or fetestexcept(FE_INVALID
       | FE_DIVBYZERO | FE_OVERFLOW  |  FE_UNDERFLOW)  is  non-
       zero, an error has occurred.

RETURN VALUE
       Upon successful completion, these functions shall return
       the logarithmic gamma of x.

       If x is a non-positive integer, a pole error shall occur
       and  lgamma(),  lgammaf(),  and  lgammal()  shall return
       +HUGE_VAL, +HUGE_VALF, and +HUGE_VALL, respectively.

       If the correct value would cause overflow, a range error
       shall occur and lgamma(), lgammaf(), and lgammal() shall
       return +-HUGE_VAL, +-HUGE_VALF, and +-HUGE_VALL  (having
       the same sign as the correct value), respectively.

       If x is NaN, a NaN shall be returned.

       If x is 1 or 2, +0 shall be returned.

       If x is +-Inf, +Inf shall be returned.

ERRORS
       These functions shall fail if:

       Pole Error
              The x argument is a negative integer or zero.

       If    the   integer   expression   (math_errhandling   &
       MATH_ERRNO) is non-zero, then  errno  shall  be  set  to
       [ERANGE].  If the integer expression (math_errhandling &
       MATH_ERREXCEPT) is  non-zero,  then  the  divide-by-zero
       floating-point exception shall be raised.

       Range Error
              The result overflows.

       If    the   integer   expression   (math_errhandling   &
       MATH_ERRNO) is non-zero, then  errno  shall  be  set  to
       [ERANGE].  If the integer expression (math_errhandling &
       MATH_ERREXCEPT) is non-zero, then the overflow floating-
       point exception shall be raised.


       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       On    error,   the   expressions   (math_errhandling   &
       MATH_ERRNO) and (math_errhandling & MATH_ERREXCEPT)  are
       independent of each other, but at least one of them must
       be non-zero.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       exp() , feclearexcept() , fetestexcept() , isnan() , the
       Base Definitions volume of IEEE Std 1003.1-2001, Section
       4.18, Treatment of  Error  Conditions  for  Mathematical
       Functions, <math.h>

COPYRIGHT
       Portions  of  this  text are reprinted and reproduced in
       electronic form from  IEEE  Std  1003.1,  2003  Edition,
       Standard  for Information Technology -- Portable Operat-
       ing System Interface (POSIX), The Open Group Base Speci-
       fications Issue 6, Copyright (C) 2001-2003 by the Insti-
       tute of Electrical and Electronics  Engineers,  Inc  and
       The  Open Group. In the event of any discrepancy between
       this version and the original IEEE and  The  Open  Group
       Standard,  the original IEEE and The Open Group Standard
       is the referee document. The original  Standard  can  be
       obtained        online        at        http://www.open-
       group.org/unix/online.html .



POSIX                         2003                    lgamma(P)
