atanh(P)                                               atanh(P)





NAME
       atanh, atanhf, atanhl - inverse hyperbolic tangent func-
       tions

SYNOPSIS
       #include <math.h>

       double atanh(double x);
       float atanhf(float x);
       long double atanhl(long double x);


DESCRIPTION
       The functionality described on this  reference  page  is
       aligned  with  the  ISO C standard. Any conflict between
       the requirements described here and the  ISO C  standard
       is  unintentional.   This volume of IEEE Std 1003.1-2001
       defers to the ISO C standard.

       These functions shall  compute  the  inverse  hyperbolic
       tangent of their argument x.

       An  application  wishing  to  check for error situations
       should  set  errno   to   zero   and   call   feclearex-
       cept(FE_ALL_EXCEPT)  before calling these functions.  On
       return, if errno is non-zero or  fetestexcept(FE_INVALID
       |  FE_DIVBYZERO  |  FE_OVERFLOW  | FE_UNDERFLOW) is non-
       zero, an error has occurred.

RETURN VALUE
       Upon successful completion, these functions shall return
       the inverse hyperbolic tangent of their argument.

       If  x  is  +-1,  a  pole error shall occur, and atanh(),
       atanhf(), and atanhl() shall return  the  value  of  the
       macro  HUGE_VAL, HUGE_VALF, and HUGE_VALL, respectively,
       with the same sign as the correct value of the function.

       For  finite  |x|>1,  a  domain  error  shall  occur, and
        either a NaN (if supported),  or    an  implementation-
       defined value shall be returned.

       If x is NaN, a NaN shall be returned.

       If x is +-0, x shall be returned.

       If  x is +-Inf, a domain error shall occur, and either a
       NaN (if supported), or an  implementation-defined  value
       shall be returned.

       If  x is subnormal, a range error may occur and x should
       be returned.

ERRORS
       These functions shall fail if:

       Domain Error
              The x argument is finite and  not  in  the  range
              [-1,1],    or is +-Inf.

       If    the   integer   expression   (math_errhandling   &
       MATH_ERRNO) is non-zero, then  errno  shall  be  set  to
       [EDOM].  If  the  integer expression (math_errhandling &
       MATH_ERREXCEPT) is non-zero, then the invalid  floating-
       point exception shall be raised.

       Pole Error
              The x argument is +-1.

       If    the   integer   expression   (math_errhandling   &
       MATH_ERRNO) is non-zero, then  errno  shall  be  set  to
       [ERANGE].  If the integer expression (math_errhandling &
       MATH_ERREXCEPT) is  non-zero,  then  the  divide-by-zero
       floating-point exception shall be raised.



       These functions may fail if:

       Range Error
              The value of x is subnormal.

       If    the   integer   expression   (math_errhandling   &
       MATH_ERRNO) is non-zero, then  errno  shall  be  set  to
       [ERANGE].  If the integer expression (math_errhandling &
       MATH_ERREXCEPT) is non-zero, then the  underflow  float-
       ing-point exception shall be raised.


       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       On    error,   the   expressions   (math_errhandling   &
       MATH_ERRNO) and (math_errhandling & MATH_ERREXCEPT)  are
       independent of each other, but at least one of them must
       be non-zero.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       feclearexcept() , fetestexcept() ,  tanh()  ,  the  Base
       Definitions   volume  of  IEEE Std 1003.1-2001,  Section
       4.18, Treatment of  Error  Conditions  for  Mathematical
       Functions, <math.h>

COPYRIGHT
       Portions  of  this  text are reprinted and reproduced in
       electronic form from  IEEE  Std  1003.1,  2003  Edition,
       Standard  for Information Technology -- Portable Operat-
       ing System Interface (POSIX), The Open Group Base Speci-
       fications Issue 6, Copyright (C) 2001-2003 by the Insti-
       tute of Electrical and Electronics  Engineers,  Inc  and
       The  Open Group. In the event of any discrepancy between
       this version and the original IEEE and  The  Open  Group
       Standard,  the original IEEE and The Open Group Standard
       is the referee document. The original  Standard  can  be
       obtained        online        at        http://www.open-
       group.org/unix/online.html .



POSIX                         2003                     atanh(P)
