logb(P)                                                 logb(P)





NAME
       logb, logbf, logbl - radix-independent exponent

SYNOPSIS
       #include <math.h>

       double logb(double x);
       float logbf(float x);
       long double logbl(long double x);


DESCRIPTION
       The  functionality  described  on this reference page is
       aligned with the ISO C standard.  Any  conflict  between
       the  requirements  described here and the ISO C standard
       is unintentional.  This volume  of  IEEE Std 1003.1-2001
       defers to the ISO C standard.

       These  functions  shall compute the exponent of x, which
       is the integral part of log_r |x|, as a signed floating-
       point value, for non-zero x, where r is the radix of the
       machine's floating-point arithmetic, which is the  value
       of FLT_RADIX defined in the <float.h> header.

       If  x  is subnormal it is treated as though it were nor-
       malized; thus for finite positive x:


              1 <= x * FLT_RADIX**-logb(x) < FLT_RADIX


       An application wishing to  check  for  error  situations
       should   set   errno   to   zero   and  call  feclearex-
       cept(FE_ALL_EXCEPT) before calling these functions.   On
       return,  if errno is non-zero or fetestexcept(FE_INVALID
       | FE_DIVBYZERO | FE_OVERFLOW  |  FE_UNDERFLOW)  is  non-
       zero, an error has occurred.

RETURN VALUE
       Upon successful completion, these functions shall return
       the exponent of x.

       If x is +-0,  a  pole  error  shall  occur  and  logb(),
       logbf(), and logbl() shall return -HUGE_VAL, -HUGE_VALF,
       and -HUGE_VALL, respectively.

       If x is NaN, a NaN shall be returned.

       If x is +-Inf, +Inf shall be returned.

ERRORS
       These functions shall fail if:

       Pole Error
              The value of x is +-0.

       If   the   integer   expression   (math_errhandling    &
       MATH_ERRNO)  is  non-zero,  then  errno  shall be set to
       [ERANGE]. If the integer expression (math_errhandling  &
       MATH_ERREXCEPT)  is  non-zero,  then  the divide-by-zero
       floating-point exception shall be raised.


       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       On   error,   the   expressions   (math_errhandling    &
       MATH_ERRNO)  and (math_errhandling & MATH_ERREXCEPT) are
       independent of each other, but at least one of them must
       be non-zero.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       feclearexcept()  ,  fetestexcept() , ilogb() , scalb() ,
       the Base  Definitions  volume  of  IEEE Std 1003.1-2001,
       Section  4.18,  Treatment of Error Conditions for Mathe-
       matical Functions, <float.h>, <math.h>

COPYRIGHT
       Portions of this text are reprinted  and  reproduced  in
       electronic  form  from  IEEE  Std  1003.1, 2003 Edition,
       Standard for Information Technology -- Portable  Operat-
       ing System Interface (POSIX), The Open Group Base Speci-
       fications Issue 6, Copyright (C) 2001-2003 by the Insti-
       tute  of  Electrical  and Electronics Engineers, Inc and
       The Open Group. In the event of any discrepancy  between
       this  version  and  the original IEEE and The Open Group
       Standard, the original IEEE and The Open Group  Standard
       is  the  referee  document. The original Standard can be
       obtained        online        at        http://www.open-
       group.org/unix/online.html .



POSIX                         2003                      logb(P)
