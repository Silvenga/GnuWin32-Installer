.TH OPENNET 3 "25 Nov 04" "libconfig 0.9.1"
.SH NAME
opennet \- URL handling library.

.SH SYNOPSIS
.B #include <opennet.h>
.sp
.BI "int opennet_init(void);"
.br
.BI "int open_net(const char *" pathname ", int " flags ", mode_t " mode ");"
.br
.BI "off_t lseek_net(int " filedes ", off_t " offset ", int " whence ");"
.br
.BI "ssize_t read_net(int " fd ", void *" buf ", size_t " count ");"
.br
.BI "FILE *fopen_net(const char *" path ", const char *" mode ");"
.br
.BI "int fseek_net(FILE *" stream ", long " offset ", int " whence ");"

.SH DESCRIPTION
Opennet is a library to provide an easy mechanism to open and handle URLs in the same way you would open and handle a regular file.  The very first function that must be called in your program is
.BR opennet_init (3)
(for win32 compatability).

.SH EXAMPLE
.nf
#include <opennet.h>
#include <stdlib.h>
#include <unistd.h>
#include <stdio.h>

int main(int argc, char **argv) {
	FILE *fp = NULL;
	char *filename = NULL, *fg_ret = NULL;
	char buf[512] = {0};

	filename = "http://www.rkeene.org/robots.txt";

	fp = fopen_net(filename, "r");

	if (fp == NULL) {
		perror("fopen_net");
		return(EXIT_FAILURE);
	}

	fg_ret = fgets(buf, sizeof(buf) - 1, fp);

	if (fg_ret == NULL) {
		perror("fgets");
		return(EXIT_FAILURE);
	}

	printf("read: %s", buf);

	return(EXIT_SUCCESS);
}
.fi

.SH "SEE ALSO"
.BR fopen_net (3),
.BR fseek_net (3),
.BR lseek_net (3),
.BR open_net (3),
.BR opennet_init (3),
.BR read_net (3)
