.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroup's Single Unix specification http://www.UNIX-systems.org/online.html
.\"   ISO/IEC 9899:1999
.\"
.TH FGETWS 3  "July 25, 1999" "GNU" "Linux Programmer's Manual"
.SH NAME
fgetws \- read a wide character string from a FILE stream
.SH SYNOPSIS
.nf
.B #include <wchar.h>
.sp
.BI "wchar_t* fgetws (wchar_t* " ws ", int " n ", FILE* " stream );
.fi
.SH DESCRIPTION
The \fBfgetws\fP function is the wide-character equivalent of the \fBfgets\fP
function. It reads a string of at most \fIn-1\fP wide characters into the
wide-character array pointed to by \fIws\fP, and adds a terminating L'\\0'
character. It stops reading wide characters after it has encountered and
stored a newline wide character. It also stops when end of stream is reached.
.PP
The programmer must ensure that there is room for at least \fIn\fP wide
characters at \fIws\fP.
.SH "RETURN VALUE"
The \fBfgetws\fP function, if successful, returns \fIws\fP. If end of stream
was already reached or if an error occurred, it returns NULL.
.SH "CONFORMING TO"
ISO/ANSI C, UNIX98
.SH "SEE ALSO"
.BR fgetwc (3)
.SH NOTES
The behaviour of \fBfgetws\fP depends on the LC_CTYPE category of the
current locale.
.PP
In the absence of additional information passed to the fopen call, it is
reasonable to expect that \fBfgetws\fP will actually read a multibyte string
from the stream and then convert it to a wide character string.
.PP
This function is unreliable, because it does not permit to deal properly with
null wide characters that may be present in the input.
