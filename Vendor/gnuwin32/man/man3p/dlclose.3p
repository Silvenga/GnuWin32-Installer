.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "DLCLOSE" 3P 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" dlclose 
.SH PROLOG
This manual page is part of the POSIX Programmer's Manual.
The Linux implementation of this interface may differ (consult
the corresponding Linux manual page for details of Linux behavior),
or the interface may not be implemented on Linux.
.SH NAME
dlclose \- close a dlopen object
.SH SYNOPSIS
.LP
\fB#include <dlfcn.h>
.br
.sp
int dlclose(void *\fP\fIhandle\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
The \fIdlclose\fP() function shall inform the system that the object
referenced by a \fIhandle\fP returned from a previous \fIdlopen\fP()
invocation is no longer needed by the application.
.LP
The use of \fIdlclose\fP() reflects a statement of intent on the part
of the process, but does not create any requirement upon
the implementation, such as removal of the code or symbols referenced
by \fIhandle\fP. Once an object has been closed using
\fIdlclose\fP() an application should assume that its symbols are
no longer available to \fIdlsym\fP(). All objects loaded automatically
as a result of invoking \fIdlopen\fP() on the referenced object shall
also be closed if this is the last reference to
it.
.LP
Although a \fIdlclose\fP() operation is not required to remove structures
from an address space, neither is an implementation
prohibited from doing so. The only restriction on such a removal is
that no object shall be removed to which references have been
relocated, until or unless all such references are removed. For instance,
an object that had been loaded with a \fIdlopen\fP() operation specifying
the RTLD_GLOBAL flag might provide a target for dynamic
relocations performed in the processing of other objects-in such environments,
an application may assume that no relocation, once
made, shall be undone or remade unless the object requiring the relocation
has itself been removed.
.SH RETURN VALUE
.LP
If the referenced object was successfully closed, \fIdlclose\fP()
shall return 0. If the object could not be closed, or if
\fIhandle\fP does not refer to an open object, \fIdlclose\fP() shall
return a non-zero value. More detailed diagnostic
information shall be available through \fIdlerror\fP().
.SH ERRORS
.LP
No errors are defined.
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.LP
The following example illustrates use of \fIdlopen\fP() and \fIdlclose\fP():
.sp
.RS
.nf

\fB\&...
/* Open a dynamic library and then close it ... */
.sp

#include <dlfcn.h>
void *mylib;
int eret;
.sp

mylib = dlopen("mylib.so", RTLD_LOCAL | RTLD_LAZY);
\&...
eret = dlclose(mylib);
\&...
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
A conforming application should employ a \fIhandle\fP returned from
a \fIdlopen\fP()
invocation only within a given scope bracketed by the \fIdlopen\fP()
and \fIdlclose\fP()
operations. Implementations are free to use reference counting or
other techniques such that multiple calls to \fIdlopen\fP() referencing
the same object may return the same object for \fIhandle\fP.
Implementations are also free to reuse a \fIhandle\fP. For these reasons,
the value of a \fIhandle\fP must be treated as an
opaque object by the application, used only in calls to \fIdlsym\fP()
and
\fIdlclose\fP().
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIdlerror\fP(), \fIdlopen\fP(), \fIdlsym\fP(), the Base Definitions
volume of IEEE\ Std\ 1003.1-2001, \fI<dlfcn.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
