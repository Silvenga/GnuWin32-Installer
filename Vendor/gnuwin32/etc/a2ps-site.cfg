# a2ps-site.cfg                                           -*- Makefile -*-
#
# This file is included from a2ps.cfg
#

# In this file should be defined your specific values you want to keep
# for other installation (future) installation of a2ps.

#################################################################
# 1)	System dependent parameters				#
#################################################################

# Default encoding
Options: --encoding=latin1

# Default medium
Options: --medium=A4

#################################################################
# 2)	Your printers						#
#################################################################

# By default, produce Level 1 PostScript.
# Currently it only means to consider only the 13 level 1 standard
# fonts, and not the 35 standard level 2 fonts.
DefaultPPD: level1

# NOTE:
# Because sending a file to a printer is system dependent and because
# this file is meant to be system independent, there are two variables
# defined in a2ps.cfg you should use here.
# - #{lp.default}
#   Its value is typically `lp' or `lpr'.
# - #{lp}
#   Its value is typically `lp -d' or `lpr -P'.  Immediately after
#   #{lp} there should be the name of the printer.
#

### DefaultPrinter
# DefaultPrinter is the printer which is called upon `a2ps -d'.
DefaultPrinter: > $N.#.

### UnknownPrinter
# The `UnknownPrinter' is the command used when the user specified
# the name of the printer (a2ps -P <printer-name>), but <printer-name>
# is not specified below as a special case.
# <printer-name> is available here as `#o'.
UnknownPrinter: | #{lp} #o

### Some special printers.
# This section is to fill only if you want to tune your system.
# The entry `UnknownPrinter' is enough to handle any case.

# For instance, I want to specify that arlette is a Level 2 PostScript
# printer.  I specif no command, so the `UnknownPrinter' command will
# be used.
#Printer: arlette level2

# dominique is a level 2 PostScript _without_ Duplex support.
# Here I *want* a special command, not that of the UnknownPrinter.
# We use the shell script psmandup to simulate Duplex.
#Printer: dominique level2 | #?d#psmandup -n|## #{lp} dominique

# This is just to show that any command can be used.  Instead of
# printing, the output is piped in `wc'.
#Printer: wc | wc -l

# You can also save in a file if you wish.
#Printer: netscape >netscape.ps

# This example uses the fact that `$N' expands in the input file name,
# so a2ps foo -P gzip will save the output in foo.ps.gz.
#Printer: gzip | gzip -c > $N.#..gz
