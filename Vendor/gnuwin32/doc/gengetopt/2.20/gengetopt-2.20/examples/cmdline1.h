/* cmdline1.h */

/* File autogenerated by gengetopt version 2.20  */

#ifndef CMDLINE1_H
#define CMDLINE1_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "sample1"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION "2.0"
#endif

struct gengetopt_args_info
{
  const char *help_help; /* Print help and exit help description.  */
  const char *full_help_help; /* Print help, including hidden options, and exit help description.  */
  const char *version_help; /* Print version and exit help description.  */
  char * str_opt_arg;	/* A string option, for a filename.  */
  char * str_opt_orig;	/* A string option, for a filename original value given at command line.  */
  const char *str_opt_help; /* A string option, for a filename help description.  */
  int my_opt_arg;	/* Another integer option, this time the description of the option should be \"quite\" long to require wrapping... possibly more than one wrapping :-) especially if I\nrequire a line break.  */
  char * my_opt_orig;	/* Another integer option, this time the description of the option should be \"quite\" long to require wrapping... possibly more than one wrapping :-) especially if I\nrequire a line break original value given at command line.  */
  const char *my_opt_help; /* Another integer option, this time the description of the option should be \"quite\" long to require wrapping... possibly more than one wrapping :-) especially if I\nrequire a line break help description.  */
  int int_opt_arg;	/* A int option.  */
  char * int_opt_orig;	/* A int option original value given at command line.  */
  const char *int_opt_help; /* A int option help description.  */
  int flag_opt_flag;	/* A flag option (default=off).  */
  const char *flag_opt_help; /* A flag option help description.  */
  const char *funct_opt_help; /* A function option help description.  */
  long long_opt_arg;	/* A long option.  */
  char * long_opt_orig;	/* A long option original value given at command line.  */
  const char *long_opt_help; /* A long option help description.  */
  char * def_opt_arg;	/* A string option with default (default='Hello').  */
  char * def_opt_orig;	/* A string option with default original value given at command line.  */
  const char *def_opt_help; /* A string option with default help description.  */
  char * enum_opt_arg;	/* A string option with list of values (default='hello').  */
  char * enum_opt_orig;	/* A string option with list of values original value given at command line.  */
  const char *enum_opt_help; /* A string option with list of values help description.  */
  int secret_arg;	/* hidden option will not appear in --help.  */
  char * secret_orig;	/* hidden option will not appear in --help original value given at command line.  */
  const char *secret_help; /* hidden option will not appear in --help help description.  */
  int dependant_arg;	/* option that depends on str-opt.  */
  char * dependant_orig;	/* option that depends on str-opt original value given at command line.  */
  const char *dependant_help; /* option that depends on str-opt help description.  */
  
  int help_given ;	/* Whether help was given.  */
  int full_help_given ;	/* Whether full-help was given.  */
  int version_given ;	/* Whether version was given.  */
  int str_opt_given ;	/* Whether str-opt was given.  */
  int my_opt_given ;	/* Whether my-opt was given.  */
  int int_opt_given ;	/* Whether int-opt was given.  */
  int flag_opt_given ;	/* Whether flag-opt was given.  */
  int funct_opt_given ;	/* Whether funct-opt was given.  */
  int long_opt_given ;	/* Whether long-opt was given.  */
  int def_opt_given ;	/* Whether def-opt was given.  */
  int enum_opt_given ;	/* Whether enum-opt was given.  */
  int secret_given ;	/* Whether secret was given.  */
  int dependant_given ;	/* Whether dependant was given.  */

  char **inputs ; /* unamed options */
  unsigned inputs_num ; /* unamed options number */
} ;

extern const char *gengetopt_args_info_purpose;
extern const char *gengetopt_args_info_usage;
extern const char *gengetopt_args_info_help[];
extern const char *gengetopt_args_info_full_help[];

int cmdline_parser (int argc, char * const *argv,
  struct gengetopt_args_info *args_info);
int cmdline_parser2 (int argc, char * const *argv,
  struct gengetopt_args_info *args_info,
  int override, int initialize, int check_required);
int cmdline_parser_file_save(const char *filename,
  struct gengetopt_args_info *args_info);

void cmdline_parser_print_help(void);
void cmdline_parser_print_full_help(void);
void cmdline_parser_print_version(void);

void cmdline_parser_init (struct gengetopt_args_info *args_info);
void cmdline_parser_free (struct gengetopt_args_info *args_info);

int cmdline_parser_required (struct gengetopt_args_info *args_info,
  const char *prog_name);

extern char *cmdline_parser_enum_opt_values[] ;	/* Possible values for enum-opt.  */


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* CMDLINE1_H */
